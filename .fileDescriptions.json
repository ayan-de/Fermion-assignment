{
  "apps/server/src/index.ts": "Main server entry point that sets up Express server with Socket.IO, CORS configuration, and serves static HLS files. Initializes the MediaSoup server with the Socket.IO instance.",
  "apps/server/src/mediasoupServer.ts": "Core MediaSoup server setup that handles WebRTC peer connections, transport creation, producer/consumer management, and HLS streaming. Manages all Socket.IO events for real-time communication.",
  "apps/server/src/ffmpeg.ts": "FFmpeg configuration and setup file for video transcoding operations.",
  "apps/server/src/handlers/index.ts": "Central export file for all Socket.IO event handlers, providing a clean interface for the main server.",
  "apps/server/src/handlers/connectionHandler.ts": "Handles new client connections, initializes peer data structures and sets up connection state.",
  "apps/server/src/handlers/disconnectHandler.ts": "Manages client disconnections, cleans up peer data, producers, consumers, and associated HLS streams.",
  "apps/server/src/handlers/hlsHandler.ts": "Handles HLS streaming requests, manages stream URLs, and provides available streams information to clients.",
  "apps/server/src/handlers/consumerHandler.ts": "Manages WebRTC consumer creation and setup for receiving media streams from producers.",
  "apps/server/src/handlers/producerHandler.ts": "Handles WebRTC producer creation and setup for sending media streams to the server.",
  "apps/server/src/handlers/transportHandler.ts": "Manages WebRTC transport creation and connection for both producers and consumers, handles DTLS handshakes.",
  "apps/server/src/services/mediasoup/index.ts": "Main export file for MediaSoup services, providing access to router, peer, transport, producer, consumer, and HLS stream management functions.",
  "apps/server/src/services/mediasoup/router.ts": "MediaSoup router initialization and management, handles worker creation and router setup for media routing.",
  "apps/server/src/services/mediasoup/peerManager.ts": "Manages peer connections, stores peer data, and provides peer lookup and removal functionality.",
  "apps/server/src/services/mediasoup/transportManager.ts": "Handles WebRTC transport creation and connection for both producer and consumer transports.",
  "apps/server/src/services/mediasoup/producerManager.ts": "Manages media producers, stores producer data, and provides producer lookup and management functionality.",
  "apps/server/src/services/mediasoup/consumerManager.ts": "Handles media consumer creation and management, including consumer setup for specific producers.",
  "apps/server/src/services/mediasoup/hlsStreamManager.ts": "Manages HLS stream lifecycle, including stream creation, URL generation, and cleanup operations.",
  "apps/server/src/services/ffmpeg/index.ts": "Main export file for FFmpeg services, providing access to HLS transcoding, port management, SDP generation, and FFmpeg process control.",
  "apps/server/src/services/ffmpeg/hlsManager.ts": "Core HLS transcoding manager that handles stream creation, FFmpeg process management, and HLS playlist generation.",
  "apps/server/src/services/ffmpeg/ffmpegProcess.ts": "Manages individual FFmpeg processes for video transcoding, including process lifecycle and error handling.",
  "apps/server/src/services/ffmpeg/sdpGenerator.ts": "Generates SDP (Session Description Protocol) files for FFmpeg transcoding operations.",
  "apps/server/src/services/ffmpeg/portManager.ts": "Manages port allocation and deallocation for FFmpeg transcoding processes to avoid port conflicts.",
  "apps/server/src/types/index.ts": "TypeScript type definitions for the entire server application, including interfaces for peers, producers, consumers, and transport configurations.",
  "apps/server/package.json": "Server dependencies and scripts configuration, including MediaSoup, Socket.IO, FFmpeg, and other required packages.",
  "apps/server/tsconfig.json": "TypeScript configuration for the server application, including compiler options and file inclusion/exclusion rules.",
  ".fileignore": "TODO: Add description"
}